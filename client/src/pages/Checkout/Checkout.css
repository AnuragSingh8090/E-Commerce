/* Checkout Page Styles */

/* Improve radio button appearance */
input[type="radio"] {
  accent-color: var(--primary);
}

/* Step indicator animations */
.step-indicator-active {
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(0, 100, 255, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(0, 100, 255, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(0, 100, 255, 0);
  }
}

/* Payment method styling */
.payment-method-option {
  transition: all 0.2s ease-in-out;
  position: relative;
  overflow: hidden;
}

.payment-method-option.selected {
  border-width: 2px;
  transform: translateY(-2px);
}

.payment-method-option.selected::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 4px;
  height: 100%;
  background: var(--primary);
}

/* Card number display styling */
.card-number {
  font-family: monospace;
  letter-spacing: 1px;
}

/* Payment type badges */
.payment-type-badge {
  position: absolute;
  top: 0;
  right: 0;
  font-size: 0.65rem;
  padding: 2px 6px;
  border-radius: 0 0.375rem 0 0.375rem;
  font-weight: 500;
}

/* Fixed mobile checkout button */
.fixed-checkout-btn {
  display: none;
}

@media (max-width: 1023px) {
  .fixed-checkout-btn.visible {
    display: block;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 100;
    background-color: white;
    box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.05);
    padding: 12px 16px;
    border-top: 1px solid #e5e7eb;
    transition: transform 0.3s ease;
  }

  .fixed-checkout-btn.hidden {
    display: none;
  }

  /* Add padding to the bottom of the page to ensure content isn't hidden behind fixed button */
  .checkout-container {
    padding-bottom: 80px;
  }

  .summary-sticky {
    position: static;
    top: auto;
  }
}

/* Improved disabled button styling */
.button-disabled {
  background: #f3f4f6 !important;
  background-image: none !important;
  color: #9ca3af !important;
  cursor: not-allowed;
  opacity: 0.7;
  box-shadow: none !important;
  border: 1px solid #e5e7eb !important;
}

/* Form field focus animations */
input:focus,
select:focus,
textarea:focus {
  transition: all 0.2s ease-in-out;
  transform: translateY(-2px);
}

/* Payment method hover effect */
.payment-method-option:hover:not(.disabled) {
  transform: translateY(-2px);
  transition: transform 0.2s ease;
}

/* Saved address/payment selection styles */
.saved-item {
  transition: all 0.2s ease;
  cursor: pointer;
}

.saved-item:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.saved-item.selected {
  border-color: var(--primary);
  background-color: rgba(0, 100, 255, 0.05);
}

/* Loading animation for the place order button */
.loading-animation {
  position: relative;
  overflow: hidden;
}

.loading-animation::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.2) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-150%);
  }
  100% {
    transform: translateX(150%);
  }
}

/* Payment Method Form Styling */
.payment-form-field {
  transition: border-color 0.3s ease;
}

.payment-form-field:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 1px rgba(59, 130, 246, 0.3);
}

.payment-form-field.error {
  border-color: #ef4444;
  background-color: #fff5f5;
}

.payment-form-field.error:focus {
  box-shadow: 0 0 0 1px rgba(239, 68, 68, 0.3);
}

.payment-error-message {
  color: #ef4444;
  font-size: 0.75rem;
  margin-top: 0.25rem;
  animation: fadeIn 0.3s ease;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Saved Payment Methods */
.saved-payment-card {
  background: linear-gradient(135deg, #f6f8fb 0%, #e9edf5 100%);
  border-radius: 0.5rem;
  padding: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  position: relative;
}

.card-number {
  letter-spacing: 0.5px;
  font-family: monospace;
}

/* Button styling with cursor pointer */
button {
  cursor: pointer;
}

button:disabled,
button.button-disabled {
  cursor: not-allowed !important;
}
